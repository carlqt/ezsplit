# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @authenticated repeatable on OBJECT | FIELD_DEFINITION

type User {
  id: ID!
  username: String!

  # UserState enum is in me.graphqls file
  state: UserState!
}

type UserWithJwt {
  id: ID!
  username: String!
  accessToken: String!
}

type Item {
  id: ID!
  name: String!
  price: String!
  sharedBy: [User!]!
}

# Use this for relations between Users and Items
type UserOrderRef {
  id: ID!
  userId: ID!
  itemId: ID!
}

type DeleteItemPayload {
  msg: String!
  id: ID!
}

input UserInput {
  username: String!
  password: String!
  confirmPassword: String!
}

input LoginUserInput {
  username: String!
  password: String!
}

input AddItemToReceiptInput {
  receiptId: ID!
  name: String!
  price: Float
}

input AssignUserToItemInput {
  itemId: ID!
  userId: ID!
}

input AssignOrDeleteMeToItemInput {
  itemId: ID!
}

input CreateGuestUserInput {
  username: String!
}

type Mutation {
  addItemToReceipt(input: AddItemToReceiptInput): Item! @authenticated
  assignUserToItem(input: AssignUserToItemInput): Item! @authenticated
  assignMeToItem(input: AssignOrDeleteMeToItemInput): Item! @authenticated
  removeMeFromItem(input: AssignOrDeleteMeToItemInput): DeleteItemPayload! @authenticated

  assignOrRemoveMeFromItem(itemId: ID!): UserOrderRef!

  createUser(input: UserInput): UserWithJwt!
  createGuestUser(input: CreateGuestUserInput): User!
  loginUser(input: LoginUserInput): UserWithJwt!
  logoutUser: String!
}

type Query {
  users: [User]! @authenticated
}
